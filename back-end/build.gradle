plugins {
    id "org.springframework.boot" version "2.3.1.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "java"
    id "org.sonarqube" version "3.0"
    id "jacoco"
    id "com.epages.restdocs-api-spec" version "0.11.5"
    id "org.asciidoctor.convert" version "1.5.8"
}

group = "org.antop"
version = "1.0.0"

project.sourceCompatibility = 1.8
project.targetCompatibility = 1.8

/**
 * Gradle을 통해 빌드 테스트시에 H2 데이터베이스의 인코딩이 안맞춰져서 한글이 전부 깨지게 된다.
 * 그래서 Gradle test 실행시 file.encoding 을 설정한다.
 * https://gist.github.com/rponte/d660919434d094bbd35a1aabf7ef1bf0
 */
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

// 1st approach
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 2nd approach
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    // https://github.com/jwtk/jjwt
    implementation "io.jsonwebtoken:jjwt:0.9.1"
    // querydsl
    implementation "com.querydsl:querydsl-jpa"
    // https://projectlombok.org/
    compileOnly "org.projectlombok:lombok"
    developmentOnly "org.springframework.boot:spring-boot-devtools"
    // https://mapstruct.org/
    compileOnly "org.mapstruct:mapstruct:1.4.2.Final"
    // https://docs.sentry.io/clients/java/integrations/#spring
    implementation "io.sentry:sentry-spring:1.7.30"
    // https://github.com/ulisesbocchio/jasypt-spring-boot/issues
    implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3"
    // https://github.com/candrews/log4jdbc-spring-boot-starter/
    implementation "com.integralblue:log4jdbc-spring-boot-starter:2.0.0"
    // https://mariadb.com/kb/en/about-mariadb-connector-j/
    implementation "org.mariadb.jdbc:mariadb-java-client:2.6.2"
    // https://commons.apache.org/proper/commons-io/
    implementation "commons-io:commons-io:2.8.0"
    // https://commons.apache.org/proper/commons-lang/
    implementation "org.apache.commons:commons-lang3:3.11"
    // https://github.com/google/gson
    implementation "com.google.code.gson:gson:2.8.6"
    // https://commons.apache.org/proper/commons-codec/
    implementation "commons-codec:commons-codec:1.15"
    // https://github.com/google/guava
    implementation "com.google.guava:guava:30.1-jre"
    // https://github.com/ulisesbocchio/jasypt-spring-boot
    implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.2"
    /**
     * https://wise-develop.tistory.com/18
     * 순서에 주의해야 한다!!!!!!!
     * 맵스트럭이 롬복보다 위에 있어야 한다.
     */
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties["querydsl.version"]}:jpa"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    /**
     * test
     */
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    // https://github.com/DiUS/java-faker
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    // https://github.com/npathai/hamcrest-optional
    testImplementation "com.github.npathai:hamcrest-optional:2.0.0"
    // https://spring.io/projects/spring-restdocs
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    // https://www.h2database.com
    testImplementation 'com.h2database:h2:1.4.200'
    // swagger-ui
    implementation "io.springfox:springfox-swagger-common:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
    // https://github.com/ePages-de/restdocs-api-spec
    testImplementation "com.epages:restdocs-api-spec-mockmvc:0.12.0"
}

ext {
    set("snippetsDir", file("build/generated-snippets"))
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

jacoco {
    toolVersion "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.organization", "antop-dev-github"
        property "sonar.projectKey", "antop-dev_billiards-love:back-end"
        property "sonar.projectName", "billiards-love:back-end"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.source", "1.8"
        property "sonar.java.target", "1.8"
    }
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
    finalizedBy "copyDocument"
}

asciidoctor.doFirst {
    delete file("src/main/resources/static/index.html")
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/asciidoc/html5")
    into file("src/main/resources/static")
}

openapi3 {
    servers = [{ url = "http://localhost:9000" }]
    title = "당구사랑"
    version = "1.0.0"
    description = "당구사랑 API"
    format = "json"
    separatePublicApi = false
    outputDirectory = "src/main/resources/api-docs/"
}
